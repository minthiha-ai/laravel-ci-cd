version: '3.8'

services:
  app:
    build: .
    container_name: user-service-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - app_data:/var/www
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - user-service-network

  db:
    image: mysql:8
    container_name: user-service-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
    env_file:
      - .env.docker
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - user-service-network

  redis:
    image: redis:alpine
    container_name: user-service-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
    env_file:
      - .env.docker
    ports:
      - "6380:6379"
    networks:
      - user-service-network

  nginx:
    image: nginx:latest
    container_name: user-service-nginx
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      retries: 5
    ports:
      - "8080:80"
    volumes:
      - app_data:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_started
    networks:
      - user-service-network

volumes:
  db_data:
  app_data:

networks:
  user-service-network:
    driver: bridge
